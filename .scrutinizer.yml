filter:
    paths:
        - 'app/*'
    excluded_paths:
        - 'app/Console/Kernel.php'
        - 'app/Exceptions/Handler.php'
        - 'app/Providers/RouteServiceProvider.php'
checks:
    php:
        align_assignments: true
        avoid_fixme_comments: true
        avoid_multiple_statements_on_same_line: true
        avoid_perl_style_comments: true
        avoid_todo_comments: true
        avoid_unnecessary_concatenation: true
        check_method_contracts:
            verify_interface_like_constraints: true
            verify_documented_constraints: true
            verify_parent_constraints: true
        classes_in_camel_caps: true
        encourage_postdec_operator: true
        encourage_single_quotes: true
        fix_line_ending: true
        fix_use_statements:
            remove_unused: true
            preserve_multiple: false
            preserve_blanklines: false
            order_alphabetically: false
        function_in_camel_caps: true
        line_length:
            max_length: '120'
        more_specific_types_in_doc_comments: true
        naming_conventions:
            local_variable: '^[a-z][a-zA-Z0-9]*$'
            abstract_class_name: ^Abstract|Factory$
            utility_class_name: 'Utils?$'
            constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$'
            property_name: '^[a-z][a-zA-Z0-9]*$'
            method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$'
            parameter_name: '^[a-z][a-zA-Z0-9]*$'
            interface_name: '^[A-Z][a-zA-Z0-9]*Interface$'
            type_name: '^[A-Z][a-zA-Z0-9]*$'
            exception_name: '^[A-Z][a-zA-Z0-9]*Exception$'
            isser_method_name: '^(?:is|has|should|may|supports)'
        newline_at_end_of_file: true
        no_goto: true
        no_long_variable_names:
            maximum: '20'
        no_short_method_names:
            minimum: '3'
        no_short_variable_names:
            minimum: '3'
        optional_parameters_at_the_end: true
        overriding_parameter: true
        param_doc_comment_if_not_inferrable: true
        parameter_doc_comments: true
        phpunit_assertions: true
        prefer_while_loop_over_for_loop: true
        remove_extra_empty_lines: true
        return_doc_comment_if_not_inferrable: true
        return_doc_comments: true
        simplify_boolean_return: true
        uppercase_constants: true
        use_self_instead_of_fqcn: true
    javascript:
        no_var: true
        no_param_assign: true
        no_loop_var_assign: true
        no_implicit_undefined_return: true
        no_else_return: true
        no_alert: true
        eqeqeq: true

coding_style:
    php:
        indentation:
            general:
                use_tabs: false
                size: 4
            switch:
                indent_case: true
        spaces:
            general:
                linefeed_character: newline
            before_parentheses:
                function_declaration: false
                closure_definition: false
                function_call: false
                if: true
                for: true
                while: true
                switch: true
                catch: true
                array_initializer: false
            around_operators:
                assignment: true
                logical: true
                equality: true
                relational: true
                bitwise: true
                additive: true
                multiplicative: true
                shift: true
                unary_additive: false
                concatenation: true
                negation: false
            before_left_brace:
                class: true
                function: true
                if: true
                else: true
                for: true
                while: true
                do: true
                switch: true
                try: true
                catch: true
                finally: true
            before_keywords:
                else: true
                while: true
                catch: true
                finally: true
            within:
                brackets: false
                array_initializer: false
                grouping: false
                function_call: false
                function_declaration: false
                if: false
                for: false
                while: false
                switch: false
                catch: false
                type_cast: false
            ternary_operator:
                before_condition: true
                after_condition: true
                before_alternative: true
                after_alternative: true
                in_short_version: true
            other:
                before_comma: false
                after_comma: true
                before_semicolon: false
                after_semicolon: true
                after_type_cast: true
        braces:
            classes_functions:
                class: new-line
                function: new-line
                closure: new-line
            if:
                opening: end-of-line
                always: true
                else_on_new_line: false
            for:
                opening: end-of-line
                always: true
            while:
                opening: end-of-line
                always: true
            do_while:
                opening: end-of-line
                always: true
                while_on_new_line: false
            switch:
                opening: end-of-line
            try:
                opening: end-of-line
                catch_on_new_line: false
                finally_on_new_line: false
        upper_lower_casing:
            keywords:
                general: lower
            constants:
                true_false_null: lower

build:
    nodes:
        analysis:
            project_setup:
                override: ['true']
            tests:
                override: [php-scrutinizer-run]
tools:
    php_cs_fixer:
        config: { level: psr2 } # or psr1 if you would just like to get fixes for PSR1
